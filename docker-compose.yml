# version: '3.8'

# services:
#   frontend:
#     build: ./frontend
#     labels:
#       - "nginx.frontend=true"
#     expose:
#       - 80

#   backend:
#     build: ./backend
#     labels:
#       - "nginx.backend=true"
#     expose:
#       - 8000

#   postgres:
#     image: postgres:latest
#     environment:
#       POSTGRES_USER: youruser
#       POSTGRES_PASSWORD: yourpassword
#       POSTGRES_DB: yourdb
#     volumes:
#       - postgres_data:/var/lib/postgresql/data

#   adminer:
#     image: adminer
#     labels:
#       - "nginx.adminer=true"
#     ports:
#       - "8080:8080"

#   nginx-proxy-manager:
#     image: 'jc21/nginx-proxy-manager:latest'
#     restart: unless-stopped
#     ports:
#       # These ports are in format <host-port>:<container-port>
#       # - '8090:80' # Public HTTP Port
#       # - '443:443' # Public HTTPS Port
#       # - '81:81' # Admin Web Port
#       - 8090:81
#       # Add any other Stream port you want to expose
#       # - '21:21' # FTP

#     # Uncomment the next line if you uncomment anything in the section
#     # environment:
#       # Uncomment this if you want to change the location of
#       # the SQLite DB file within the container
#       # DB_SQLITE_FILE: "/data/database.sqlite"

#       # Uncomment this if IPv6 is not enabled on your host
#       # DISABLE_IPV6: 'true'

#     volumes:
#       - ./data:/data
#       - ./letsencrypt:/etc/letsencrypt

# volumes:
#   postgres_data:


version: '3'

services:
  frontend:
    build: ./frontend
    container_name: react_frontend
    restart: unless-stopped
    depends_on:
      - backend

  backend:
    build: ./backend
    container_name: fastapi_backend
    restart: unless-stopped

  postgres:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_USER: your_user
      POSTGRES_PASSWORD: your_password
      POSTGRES_DB: your_db
    volumes:
      - postgres_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - 8080:8080
    restart: unless-stopped

  proxy_manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx_proxy_manager
    ports:
      - 80:80
      - 8090:81
      - 443:443
    volumes:
      - data:/data
      - letsencrypt:/etc/letsencrypt
    restart: unless-stopped

volumes:
  postgres_data:
  data:
  letsencrypt:
